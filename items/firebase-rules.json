rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /courses/{courseId} {
      function getEnrollment() {
        return get(/databases/$(database)/documents/courses/$(courseId)/enrollments/$(request.auth.uid));
      }
      
      function isStaff() {
      	return getEnrollment().data.access == "STAFF";
      }
    
      function isStudent() {
      	return getEnrollment().data.access == "STUDENT";
      }
      
      function isNotArchived() {
      	return get(/databases/$(database)/documents/courses/$(courseId)).data.archived != true;
      }

    	allow read: if request.auth.uid != null;
      allow write: if request.auth.uid != null && isStaff();
    	
      match /enrollments/{user} {
      	allow read: if request.auth.uid != null && (
            request.auth.uid == resource.data.user
            || request.auth.uid == user
            || resource.data.access == "STAFF"
            || isStaff()
          );
        allow write: if request.auth.uid != null && (
            (request.auth.uid == user && resource.resource.data.access == "PENDING")
            || isStaff()
          ) && isNotArchived();
        allow delete: if request.auth.uid != null && (request.auth.uid == user || isStaff()) && isNotArchived();
      }
      
      match /posts/{post=**} {
      	allow read: if request.auth.uid != null && (isStaff() || isStudent());
        allow create: if request.auth.uid != null 
	        	&& (request.auth.uid == request.resource.data.authorId)
  	        && (isStaff() || isStudent())
            && isNotArchived();
        allow update: if request.resource.data.diff(resource.data).affectedKeys().hasOnly(["upvoters"])
            && (isStaff() || isStudent());
      }
    }
        
    match /{path=**}/enrollments/{user} {
      allow read: if request.auth.uid != null && (
          request.auth.uid == resource.data.user
        );
    }

    match /users/{user} {
      allow read: if request.auth.uid != null;
      allow write: if request.auth.uid != null && request.auth.uid == user;
    }
  }
}
